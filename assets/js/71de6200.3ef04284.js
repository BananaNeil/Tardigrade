"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[8103],{3905:(e,r,t)=>{t.d(r,{Zo:()=>d,kt:()=>m});var n=t(7294);function a(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function o(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function s(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?o(Object(t),!0).forEach((function(r){a(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function i(e,r){if(null==e)return{};var t,n,a=function(e,r){if(null==e)return{};var t,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||(a[t]=e[t]);return a}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var p=n.createContext({}),c=function(e){var r=n.useContext(p),t=r;return e&&(t="function"==typeof e?e(r):s(s({},r),e)),t},d=function(e){var r=c(e.components);return n.createElement(p.Provider,{value:r},e.children)},u={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},l=n.forwardRef((function(e,r){var t=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),l=c(t),m=a,f=l["".concat(p,".").concat(m)]||l[m]||u[m]||o;return t?n.createElement(f,s(s({ref:r},d),{},{components:t})):n.createElement(f,s({ref:r},d))}));function m(e,r){var t=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var o=t.length,s=new Array(o);s[0]=l;var i={};for(var p in r)hasOwnProperty.call(r,p)&&(i[p]=r[p]);i.originalType=e,i.mdxType="string"==typeof e?e:a,s[1]=i;for(var c=2;c<o;c++)s[c]=t[c];return n.createElement.apply(null,s)}return n.createElement.apply(null,t)}l.displayName="MDXCreateElement"},2378:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>p,contentTitle:()=>s,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>c});var n=t(7462),a=(t(7294),t(3905));const o={sidebar_position:1},s="Username Nodes",i={unversionedId:"social-graph/username-nodes",id:"social-graph/username-nodes",title:"Username Nodes",description:"Usernames are EIP-1155 based with additional peristent state.  No event indexing required, nft ids and usernames are reverse mapped on chain. (Address => nftids[]) still requires inferring state from event logs)",source:"@site/docs/social-graph/username-nodes.md",sourceDirName:"social-graph",slug:"/social-graph/username-nodes",permalink:"/Tardigrade/docs/social-graph/username-nodes",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/social-graph/username-nodes.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Social Graph",permalink:"/Tardigrade/docs/category/social-graph"},next:{title:"Connection Vertices",permalink:"/Tardigrade/docs/social-graph/connection-vertices"}},p={},c=[],d={toc:c};function u(e){let{components:r,...t}=e;return(0,a.kt)("wrapper",(0,n.Z)({},d,t,{components:r,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"username-nodes"},"Username Nodes"),(0,a.kt)("p",null,"Usernames are ",(0,a.kt)("a",{parentName:"p",href:"https://eips.ethereum.org/EIPS/eip-1155"},"EIP-1155")," based with additional peristent state.  No event indexing required, nft ids and usernames are reverse mapped on chain. (Address => nftids[]) still requires inferring state from event logs)"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"  mapping(string => uint256) usernameToNftId;\n  mapping(uint256 => string) nftIdToUsername;\n\n  mapping(uint256 => address) nftIdToAddress;  \n  mapping(uint256 => mapping(address => uint256)) nftIdBalances; // erc-1155 for does this address have this nftid? 0 false 1 true\n")),(0,a.kt)("p",null,"Rudimentary Eth deposit box and nonces for ",(0,a.kt)("a",{parentName:"p",href:"https://eips.ethereum.org/EIPS/eip-712"},"EIP-712")," under it"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"  mapping(uint256 => uint256)  nftIdUsedNonces;\n  mapping(uint256 => uint256) nftIdEthDeposits;\n\n")))}u.isMDXComponent=!0}}]);